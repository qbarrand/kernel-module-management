steps:
  - id: build-manager-image
    name: gcr.io/cloud-builders/docker
    args:
    - build
    - --build-arg
    - TARGET=manager
    - --cache-from=gcr.io/$PROJECT_ID/kernel-module-management-operator:latest
    - --tag=gcr.io/$PROJECT_ID/kernel-module-management-operator:$_GIT_TAG
    - --tag=gcr.io/$PROJECT_ID/kernel-module-management-operator:latest
    - .
    waitFor: ['-']
  - id: build-manager-hub-image
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - --build-arg
      - TARGET=manager-hub
      - --cache-from=gcr.io/$PROJECT_ID/kernel-module-management-operator-hub:latest
      - --tag=gcr.io/$PROJECT_ID/kernel-module-management-operator-hub:$_GIT_TAG
      - --tag=gcr.io/$PROJECT_ID/kernel-module-management-operator-hub:latest
      - .
    waitFor: ['-']
  - id: build-manager-spoke-image
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - --build-arg
      - TARGET=manager-spoke
      - --cache-from=gcr.io/$PROJECT_ID/kernel-module-management-operator-spoke:latest
      - --tag=gcr.io/$PROJECT_ID/kernel-module-management-operator-spoke:$_GIT_TAG
      - --tag=gcr.io/$PROJECT_ID/kernel-module-management-operator-spoke:latest
      - .
    waitFor: ['-']
  - id: build-signer-image
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - --cache-from=gcr.io/$PROJECT_ID/kernel-module-management-signimage:latest
      - --tag=gcr.io/$PROJECT_ID/kernel-module-management-signimage:$_GIT_TAG
      - --tag=gcr.io/$PROJECT_ID/kernel-module-management-signimage:latest
      - --file=Dockerfile.signimage
      - .
    waitFor: ['-']
  - id: build-bundles
    name: golang:1.19-alpine3.17
    env:
      - '_GIT_TAG=$_GIT_TAG'
      - 'PROJECT_ID=$PROJECT_ID'
    script: |
      set -euxo pipefail

      apk add bash curl gcc make musl-dev

      # Install kubectl
      curl -Lo /usr/local/bin/kubectl "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      chmod +x /usr/local/bin/kubectl

      # install operator-sdk
      curl -Lo /usr/local/bin/operator-sdk 'https://github.com/operator-framework/operator-sdk/releases/download/v1.25.2/operator-sdk_linux_amd64'
      chmod +x /usr/local/bin/operator-sdk

      # Include the destination directory of `go install` in $PATH
      export PATH=$(go env GOPATH)/bin:${PATH}

      # KMM
      make bundle IMG=gcr.io/$PROJECT_ID/kernel-module-management-operator:$_GIT_TAG
      mv bundle bundle.Dockerfile /bundle-kmm

      # KMM Hub
      make bundle-hub IMG=gcr.io/$PROJECT_ID/kernel-module-management-operator-hub:$_GIT_TAG
      mv bundle bundle.Dockerfile /bundle-hub

      # KMM Spoke
      make bundle-spoke IMG=gcr.io/$PROJECT_ID/kernel-module-management-operator-spoke:$_GIT_TAG
      mv bundle bundle.Dockerfile /bundle-spoke
    volumes:
      - name: bundle-kmm
        path: /bundle-kmm
      - name: bundle-hub
        path: /bundle-hub
      - name: bundle-spoke
        path: /bundle-spoke
    waitFor: [build-manager-image, build-manager-hub-image, build-manager-spoke-image]
  - id: build-kmm-bundle-image
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - --file=bundle.Dockerfile
      - --cache-from=gcr.io/$PROJECT_ID/kernel-module-management-operator-bundle:latest
      - --tag=gcr.io/$PROJECT_ID/kernel-module-management-operator-bundle:$_GIT_TAG
      - --tag=gcr.io/$PROJECT_ID/kernel-module-management-operator-bundle:latest
      - .
    dir: /bundle-kmm
    volumes:
      - name: bundle-kmm
        path: /bundle-kmm
    waitFor: [build-bundles]
  - id: build-hub-bundle-image
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - --file=bundle.Dockerfile
      - --cache-from=gcr.io/$PROJECT_ID/kernel-module-management-operator-hub-bundle:latest
      - --tag=gcr.io/$PROJECT_ID/kernel-module-management-operator-hub-bundle:$_GIT_TAG
      - --tag=gcr.io/$PROJECT_ID/kernel-module-management-operator-hub-bundle:latest
      - .
    dir: /bundle-hub
    volumes:
      - name: bundle-hub
        path: /bundle-hub
    waitFor: [build-bundles]
  - id: build-spoke-bundle-image
    name: gcr.io/cloud-builders/docker
    args:
      - build
      - --file=bundle.Dockerfile
      - --cache-from=gcr.io/$PROJECT_ID/kernel-module-management-operator-spoke-bundle:latest
      - --tag=gcr.io/$PROJECT_ID/kernel-module-management-operator-spoke-bundle:$_GIT_TAG
      - --tag=gcr.io/$PROJECT_ID/kernel-module-management-operator-spoke-bundle:latest
      - .
    dir: /bundle-spoke
    volumes:
      - name: bundle-spoke
        path: /bundle-spoke
    waitFor: [build-bundles]
# this prevents errors if you don't use both _GIT_TAG and _PULL_BASE_REF,
# or any new substitutions added in the future.
options:
  substitution_option: ALLOW_LOOSE
images:
  # Standard edition
  - gcr.io/$PROJECT_ID/kernel-module-management-operator:$_GIT_TAG
  - gcr.io/$PROJECT_ID/kernel-module-management-operator:latest
  - gcr.io/$PROJECT_ID/kernel-module-management-signimage:$_GIT_TAG
  - gcr.io/$PROJECT_ID/kernel-module-management-signimage:latest
  - gcr.io/$PROJECT_ID/kernel-module-management-operator-bundle:$_GIT_TAG
  - gcr.io/$PROJECT_ID/kernel-module-management-operator-bundle:latest
  # Hub
  - gcr.io/$PROJECT_ID/kernel-module-management-operator-hub:$_GIT_TAG
  - gcr.io/$PROJECT_ID/kernel-module-management-operator-hub:latest
  - gcr.io/$PROJECT_ID/kernel-module-management-operator-hub-bundle:$_GIT_TAG
  - gcr.io/$PROJECT_ID/kernel-module-management-operator-hub-bundle:latest
  # Spoke
  - gcr.io/$PROJECT_ID/kernel-module-management-operator-spoke:$_GIT_TAG
  - gcr.io/$PROJECT_ID/kernel-module-management-operator-spoke:latest
  - gcr.io/$PROJECT_ID/kernel-module-management-operator-spoke-bundle:$_GIT_TAG
  - gcr.io/$PROJECT_ID/kernel-module-management-operator-spoke-bundle:latest